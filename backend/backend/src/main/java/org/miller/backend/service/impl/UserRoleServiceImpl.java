package org.miller.backend.service.impl;import org.miller.backend.model.UserRole;import org.miller.backend.repository.UserRoleRepository;import org.miller.backend.service.UserRoleService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.time.LocalDateTime;import java.util.List;import java.util.Optional;import java.util.UUID;@Servicepublic class UserRoleServiceImpl implements UserRoleService {    @Autowired    private UserRoleRepository userRoleRepository;    @Override    public List<UserRole> getAllUserRoles() {        return userRoleRepository.findAll();    }    @Override    public Optional<UserRole> getUserRoleById(UUID id) {        return userRoleRepository.findById(id);    }    @Override    public UserRole createUserRole(UserRole userRole) {        userRole.setId(UUID.randomUUID().toString());        userRole.setAssignedAt(LocalDateTime.now());        return userRoleRepository.save(userRole);    }    @Override    public UserRole updateUserRole(UUID id, UserRole userRoleDetails) {        return userRoleRepository.findById(id)                .map(userRole -> {                    userRole.setUserId(userRoleDetails.getUserId());                    userRole.setRoleName(userRoleDetails.getRoleName());                    // AssignedAt is usually set on creation, but if you want to update it, uncomment below                    // userRole.setAssignedAt(userRoleDetails.getAssignedAt());                    return userRoleRepository.save(userRole);                }).orElseThrow(() -> new RuntimeException("UserRole not found with id " + id));    }    @Override    public void deleteUserRole(UUID id) {        userRoleRepository.deleteById(id);    }    @Override    public List<UserRole> getUserRolesByUserId(UUID userId) {        return userRoleRepository.findByUserId(userId);    }}