package org.miller.backend.service.impl;import org.miller.backend.model.Space;import org.miller.backend.repository.SpaceRepository;import org.miller.backend.service.SpaceService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.time.LocalDateTime;import java.util.List;import java.util.Optional;import java.util.UUID;@Servicepublic class SpaceServiceImpl implements SpaceService {    @Autowired    private SpaceRepository spaceRepository;    @Override    public List<Space> getAllSpaces() {        return spaceRepository.findAll();    }    @Override    public Optional<Space> getSpaceById(UUID id) {        return spaceRepository.findById(id);    }    @Override    public Space createSpace(Space space) {        space.setId(UUID.randomUUID());        space.setCreatedAt(LocalDateTime.now());        return spaceRepository.save(space);    }    @Override    public Space updateSpace(UUID id, Space spaceDetails) {        return spaceRepository.findById(id)                .map(space -> {                    space.setName(spaceDetails.getName());                    space.setDescription(spaceDetails.getDescription());                    space.setCreatedBy(spaceDetails.getCreatedBy());                    // CreatedAt is usually set on creation, but if you want to update it, uncomment below                    // space.setCreatedAt(spaceDetails.getCreatedAt());                    return spaceRepository.save(space);                }).orElseThrow(() -> new RuntimeException("Space not found with id " + id));    }    @Override    public void deleteSpace(UUID id) {        spaceRepository.deleteById(id);    }    @Override    public List<Space> getSpacesByCreatedBy(UUID createdByUserId) {        return spaceRepository.findByCreatedBy_Id(createdByUserId);    }    @Override    public Optional<Space> getSpaceByName(String name) {        return spaceRepository.findByName(name);    }}